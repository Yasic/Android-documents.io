悬浮窗口能悬浮在手机桌面甚至是所有的应用界面之上，因为悬浮窗口不隶属于任何的Activity界面，只隶属于所在进程。
一般的实现过程是利用service建立一个长生命周期的service用来维护悬浮窗，主要利用到WindowManager接口。

首先加上权限：
<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
<uses-permission android:name="android.permission.GET_TASKS" />

基本步骤:
1.建立float_window.xml布局文件
<?xml version="1.0" encoding="UTF-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/small_window_layout"
    android:layout_width="54dp"
    android:layout_height="54dp"
    >
    <Button
        android:id="@+id/floatwindowbutton"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:gravity="center"
        android:background="@drawable/easytouch"
        android:textSize="21dp"
        />
</LinearLayout>  

2.建立service文件，定义service
public class FloatWindowService extends Service {

    //定义浮动窗口布局
    LinearLayout mFloatLayout;
    WindowManager.LayoutParams wmParams;
    //创建浮动窗口设置布局参数的对象
    WindowManager mWindowManager;
    Button floatwindowbutton;
    private boolean clickflag;

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
    @Override
    public void onCreate(){
        super.onCreate();
        Notification notification = new Notification(R.drawable.ic_emoticon_devil_black_48dp,
                "easttouch后台运行", System.currentTimeMillis());
        Intent notificationIntent = new Intent(this, MainActivity.class);
        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0,
                notificationIntent, 0);
        notification.setLatestEventInfo(this,"Easytouch of Yasic","正在后台运行中", pendingIntent);
        startForeground(1, notification);
    }

    @Override
    public int onStartCommand(Intent intent,int flags,int startId){
                wmParams = new WindowManager.LayoutParams();
                mWindowManager = (WindowManager)getApplication().getSystemService(getApplication().WINDOW_SERVICE);
                //访问service提供的服务

                wmParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT;//
                //设置图片格式，效果为背景透明
                wmParams.format = PixelFormat.TRANSLUCENT;
                //设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）
                wmParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
                //调整悬浮窗显示的停靠位置为左侧置顶
                wmParams.gravity = Gravity.LEFT | Gravity.TOP;
                // 以屏幕左上角为原点，设置x、y初始值，相对于gravity
                wmParams.x = 0;
                wmParams.y = 0;

                //设置悬浮窗口长宽数据
                //wmParams.width = WindowManager.LayoutParams.WRAP_CONTENT;
                //wmParams.height = WindowManager.LayoutParams.WRAP_CONTENT;
                wmParams.width = dp2pix(48);
                wmParams.height = dp2pix(48);

                LayoutInflater inflater = LayoutInflater.from(getApplication());
                mFloatLayout = (LinearLayout) inflater.inflate(R.layout.float_window , null);
                float_window_menu = (CardView)inflater.inflate(R.layout.float_window_menu , null);
                mWindowManager.addView(mFloatLayout, wmParams);
                floatwindowbutton = (Button)mFloatLayout.findViewById(R.id.floatwindowbutton);
                home_button = (Button)float_window_menu.findViewById(R.id.home_button);
                back_button = (Button)float_window_menu.findViewById(R.id.back_button);
                power_button = (Button)float_window_menu.findViewById(R.id.power_button);
                close_button = (Button)float_window_menu.findViewById(R.id.close_button);
        
                floatwindowbutton.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        if(clickflag == true) {//不是onTouch事件
                            mWindowManager.removeView(mFloatLayout);
                            int screenWidth = mWindowManager.getDefaultDisplay().getWidth();
                            int screenHeight = mWindowManager.getDefaultDisplay().getHeight();
                            menuParams = new WindowManager.LayoutParams();
                            menuParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT;
                            menuParams.format = PixelFormat.TRANSLUCENT;
                            menuParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
                            menuParams.gravity = Gravity.LEFT | Gravity.TOP;
                            menuParams.x = screenWidth / 2 - dp2pix(148) / 2;
                            menuParams.y = screenHeight/2 - dp2pix(128)/2;
                            menuParams.width = dp2pix(148);
                            menuParams.height = dp2pix(128);
                            mWindowManager.addView(float_window_menu,menuParams);

                            /*Intent intent = new Intent(Intent.ACTION_MAIN);
                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                            intent.addCategory(Intent.CATEGORY_HOME);
                            startActivity(intent);*/
                        }
                    }
                });

                floatwindowbutton.setOnTouchListener(new View.OnTouchListener() {
                    int lastx,lasty;
                    int downx,downy;
                    @Override
                    public boolean onTouch(View v,final MotionEvent event) {
                        // TODO Auto-generated method stub
                        int eventaction = event.getAction();
                        switch (eventaction){
                            case MotionEvent.ACTION_DOWN:
                                lastx = (int)event.getRawX();
                                lasty = (int)event.getRawY();
                                downx = lastx;
                                downy = lasty;
                                break;
                            case MotionEvent.ACTION_MOVE:
                                if(Math.abs((int)(event.getRawX()-downx))>8||Math.abs((int)(event.getRawY()-downy))>8){
                                    clickflag = false;
                                }
                                else {
                                    clickflag = true;
                                }
                                if(clickflag == false){
                                    //getRawX是触摸位置相对于屏幕的坐标，getX是相对于按钮的坐标
                                    wmParams.x = (int) event.getRawX() - floatwindowbutton.getMeasuredWidth() / 2;
                                    //减25为状态栏的高度
                                    wmParams.y = (int) event.getRawY() - floatwindowbutton.getMeasuredHeight() / 2 - 25;
                                    //刷新
                                    mWindowManager.updateViewLayout(mFloatLayout, wmParams);
                                }
                                break;
                            case MotionEvent.ACTION_UP:
                                break;
                        }
                        return false;  //此处必须返回false，否则OnClickListener获取不到监听
                    }
                    });
        return super.onStartCommand(intent,flags,startId);
    }

    @Override
    public void onDestroy(){
        super.onDestroy();
        if(mFloatLayout != null)
        {
            //移除悬浮窗口
            mWindowManager.removeView(mFloatLayout);
        }
    }

    private int dp2pix(int dp){
        final float scale = getResources().getDisplayMetrics().density;
        int pix = (int) (dp * scale + 0.5f);
        return pix;
    }
}

详细补充

3.添加service到AndroidManifests.xml文件中

4.在activity中启动service
Intent serviceintent = new Intent(Welcome_Activity.this, FloatWindowService.class);
startService(serviceintent);
